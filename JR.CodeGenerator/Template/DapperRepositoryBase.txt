using Dapper;

using ExpressionExtensionSQL;

using System.Linq.Expressions;

// Nora debe tenet instalado Dapper Version: 2.0.123 o superior
// NOTA: debe tener instalado el NuGet ExpressionExtensionSQL Version: 1.2.7 ó Superior
namespace $EspacioNombre$.Repository;

/// <summary>
/// Base
/// </summary>
/// <autogeneratedoc />
public abstract class Base<T>
{
    /// <summary>
    /// Gets the where.
    /// </summary>
    /// <typeparam name="TReturn">The type of the return.</typeparam>
    /// <param name="expression">The expression.</param>
    /// <param name="sql">The SQL.</param>
    /// <returns></returns>
    /// <autogeneratedoc />
    protected KeyValuePair<string, DynamicParameters> GetWhere(Expression<Func<T, bool>> where, string query)
    {
        var whereSql = where?.ToSql() ?? WherePart.Empty;
        var parameter = new DynamicParameters();

        foreach (var param in whereSql.Parameters)
        {
            parameter.Add(param.Key, param.Value, param.Type);
        }

        string _Query = whereSql.HasSql ? $"{query} WHERE {whereSql.Sql}" : query;

        return new KeyValuePair<string, DynamicParameters>(_Query, parameter);
    }
}